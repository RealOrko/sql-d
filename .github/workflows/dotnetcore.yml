name: .NET Core

on: [push]

jobs:
  build-linux-x64:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v1
      - name: Setup
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.401
      - name: Version linux-x64
        run: echo "::set-output name=version::$($PWD/scripts/version.sh)"
        id: version
      - name: Build
        run: ./scripts/build.sh
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: tests-linux-x64
          path: "**/test-results.trx"                            
          reporter: dotnet-trx
          fail-on-error: true
      - name: Package
        run: ./scripts/package.sh
      - name: Release
        uses: actions/create-release@v1
        id: release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload sql-d.${{ steps.version.outputs.version }}.nupkg
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./packages/sql-d.${{ steps.version.outputs.version }}.nupkg
          asset_name: sql-d.${{ steps.version.outputs.version }}.nupkg
          asset_content_type: application/gzip
      - name: Upload SqlD.tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./packages/SqlD.${{ steps.version.outputs.version }}.tar.gz
          asset_name: SqlD.${{ steps.version.outputs.version }}.tar.gz
          asset_content_type: application/gzip
      - name: Upload SqlD.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./packages/SqlD.${{ steps.version.outputs.version }}.zip
          asset_name: SqlD.${{ steps.version.outputs.version }}.zip
          asset_content_type: application/gzip
      - name: Upload SqlD.UI.deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./packages/SqlD.UI.${{ steps.version.outputs.version }}.deb
          asset_name: SqlD.UI.${{ steps.version.outputs.version }}.deb
          asset_content_type: application/gzip
      - name: Upload SqlD.UI.rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./packages/SqlD.UI.${{ steps.version.outputs.version }}.rpm
          asset_name: SqlD.UI.${{ steps.version.outputs.version }}.rpm
          asset_content_type: application/gzip
      - name: Upload SqlD.UI.tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./packages/SqlD.UI.${{ steps.version.outputs.version }}.tar.gz
          asset_name: SqlD.UI.${{ steps.version.outputs.version }}.tar.gz
          asset_content_type: application/gzip
      - name: Upload SqlD.UI.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: ./packages/SqlD.UI.${{ steps.version.outputs.version }}.zip
          asset_name: SqlD.UI.${{ steps.version.outputs.version }}.zip
          asset_content_type: application/gzip

# This is hot garbage, will look at this later ... :/
#  build-win-x64:
#   runs-on: windows-latest
#   steps:
#     - uses: actions/checkout@v1
#     - name: Setup .NET Core
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: 8.0.401
#     - name: Build with dotnet win-x64
#       run: .\scripts\build.bat
#       shell: cmd

  # build-osx-x64:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Setup .NET Core
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: 8.0.401
  #     - name: Build with osx-x64
  #       run: ./scripts/build.sh
