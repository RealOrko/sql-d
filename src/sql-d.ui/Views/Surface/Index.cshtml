@model SqlD.UI.Models.Surface.SurfaceViewModel

@{
    ViewBag.Title = "services";
    Layout = "_Layout";
}

<div class="row">
    <div class="col-md-12 text-left">
        <div id="registryList" class="panel panel-default">
            <div class="panel-heading text-left">
                <span style="float: right; top: -5px; position:relative">
                    <a href="/service/launch" class="btn btn-sm btn-default" title="Start/Create new service">
                        <i class="fas fa-plus-circle"></i>
                    </a>
                </span>
                Surface Configuration
            </div>
            <div class="panel-body">

                <table class="table table-bordered">
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Database</th>
                        <th>Tags</th>
                        <th>Url</th>
                        <th>Forwards</th>
                        <th></th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var service in Model.Config.Services.OrderBy(x => string.Join(",", x.Tags)))
                    {
                        <tr>
                            <td align="left">@service.Name</td>
                            <td align="left">@service.Database</td>
                            <td align="left">@string.Join(", ", service.Tags)</td>
                            <td align="left">@service.ToUrl()</td>
                            <td align="left">
                                @foreach (var forward in service.ForwardingTo)
                                {
                                    var foundService = Model.Config.Services.First(x => x.IsEqualTo(forward));
                                    if (foundService.Tags.Count == 1)
                                    {
                                        @Html.Raw($"{forward.ToUrl()}({foundService.Tags.First()})")
                                        <br/>
                                    }
                                    else
                                    {
                                        var tagsMinusFirst = string.Join(",", foundService.Tags.Skip(1).ToList());
                                        @Html.Raw($"{forward.ToUrl()}({tagsMinusFirst})")
                                        <br/>
                                    }
                                }
                            </td>
                            <td align="center">
                                @if (!service.Tags.Contains("registry"))
                                {
                                    <a href="/service/edit/?host=@Html.Encode(service.Host)&port=@Html.Encode(service.Port)" class="btn btn-xs btn-default" title="Edit a service">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="/service/stop/?host=@Html.Encode(service.Host)&port=@Html.Encode(service.Port)" class="btn btn-xs btn-default" title="Stop a service">
                                        <i class="fas fa-minus-circle"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>