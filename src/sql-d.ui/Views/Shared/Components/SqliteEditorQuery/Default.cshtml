@model SqlD.UI.Models.SqlLiteViewModel

<div id="queryPanel" class="panel panel-primary">
	<div class="panel-heading text-left">
		<span style="float: right; position: relative; top: -5px;">
			<button id="createTable" class="btn btn-sm btn-default" title="Create a table called 'newtable1'">
				<i class="fas fa-table"></i>
			</button>
			<button id="insertRows" class="btn btn-sm btn-default" title="Insert 1 rows into 'newtable1'">
				<i class="fas fa-plus-circle"></i>
			</button>
			<button id="queryTable" class="btn btn-sm btn-default" title="Select rows from 'newtable1'">
				<i class="fas fa-question-circle"></i>
			</button>
			<button id="dropTable" class="btn btn-sm btn-danger" title="Drop table 'newtable1'">
				<i class="fas fa-minus-circle"></i>
			</button>
			<button id="executeQuery" class="btn btn-sm btn-success" title="Execute query">
				<i class="fas fa-play"></i>
			</button>
		</span>
		Query
	</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-md-12">
				<div style="overflow: auto; resize: vertical; min-height: 220px; max-height: fit-content;">
					<!-- This has to be un-indented to reduce white space that accumulates in the editor -->
					<pre id="editor" style="height: 95%; margin-left: 15px; margin-right: 15px;">
@if (!string.IsNullOrEmpty(Model.Query))
{
	@Html.Raw(Model.Query.Trim())
}
else
{
	@Html.Raw("select * from sqlite_master;")
}
</pre>
					<!-- This has to be un-indented to reduce white space that accumulates in the editor -->
				</div>
			</div>
		</div>
	</div>
</div>

<form id="QueryForm" Method="post" action="/" enctype="multipart/form-data">
	<input id="Query" name="Query" type="hidden" value=""/>
	<input id="Server" name="Server" type="hidden" value=""/>
</form>

<script>

	// Editor
	var editor = ace.edit("editor");
	editor.setTheme("ace/theme/github");
	editor.session.setMode("ace/mode/sql");
	editor.setAutoScrollEditorIntoView(true);
	editor.focus();

	// CTRL-Enter / CMD-Enter event
	editor.commands.addCommand({
		name: "execute",
		bindKey: { win: "Ctrl-Enter", mac: "Command-Enter" },
		exec: function (editor) {
			$('#Query').val(editor.getValue());
			$('#Server').val($('#registryUrl').val());
			$.post('/', $('#QueryForm').serialize(), (r) => {
				$('#bodyContainer').html(r);
			});
		}
	});

	// Execute query
	$('#executeQuery').on('click', (e) => {
		$('#Query').val(editor.getValue());
		$('#Server').val($('#registryUrl').val());
		$.post('/', $('#QueryForm').serialize(), (r) => {
			$('#bodyContainer').html(r);
		});
	});

	// Insert table event
	$('#createTable').on('click', (e) => {
		var sql = `create table if not exists newtable1 (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	name TEXT NOT NULL,
	created DATETIME default current_timestamp
);
`;
		editor.setValue(sql);
		$('#Query').val(editor.getValue());
		$('#Server').val($('#registryUrl').val());
		$.post('/', $('#QueryForm').serialize(), (r) => {
			$('#bodyContainer').html(r);
		});
	});

	// Insert rows event
	$('#insertRows').on('click', (e) => {
		var sql = `insert into newtable1 (name) values ('Example 1');`;
		editor.setValue(sql);
		$('#Query').val(editor.getValue());
		$('#Server').val($('#registryUrl').val());
		$.post('/', $('#QueryForm').serialize(), (r) => {
			$('#bodyContainer').html(r);
		});
	});

	// Query table event
	$('#queryTable').on('click', (e) => {
		var sql = `select * from newtable1;`;
		editor.setValue(sql);
		$('#Query').val(editor.getValue());
		$('#Server').val($('#registryUrl').val());
		$.post('/', $('#QueryForm').serialize(), (r) => {
			$('#bodyContainer').html(r);
		});
	});

	// Drop table event
	$('#dropTable').on('click', (e) => {
		var sql = `drop table if exists newtable1;`;
		editor.setValue(sql);
		$('#Query').val(editor.getValue());
		$('#Server').val($('#registryUrl').val());
		$.post('/', $('#QueryForm').serialize(), (r) => {
			$('#bodyContainer').html(r);
		});
	});
</script>